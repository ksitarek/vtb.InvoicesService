// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vtb.InvoicesService.DataAccess;

namespace vtb.InvoicesService.DataAccess.Migrations
{
    [DbContext(typeof(InvoicesContext))]
    [Migration("20210116011900_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("vtb.InvoicesService.Domain.Invoice", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CalculationDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DraftCreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvoicePaymentDeadlineToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IssuerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentDeadline")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PrintoutDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TemplateVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("vtb.InvoicesService.Domain.Invoice", b =>
                {
                    b.OwnsOne("vtb.InvoicesService.Domain.InvoiceNumber", "InvoiceNumber", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Day")
                                .HasColumnType("int");

                            b1.Property<string>("FormattedNumber")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("Month")
                                .HasColumnType("int");

                            b1.Property<int>("OrderingNumber")
                                .HasColumnType("int");

                            b1.Property<int>("Year")
                                .HasColumnType("int");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsMany("vtb.InvoicesService.Domain.InvoicePosition", "InvoicePositions", b1 =>
                        {
                            b1.Property<Guid>("InvoicePositionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Description")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("OrdinalNumber")
                                .HasColumnType("int");

                            b1.Property<decimal>("Quantity")
                                .HasPrecision(17, 4)
                                .HasColumnType("decimal(17,4)");

                            b1.Property<string>("Summary")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("UnitOfMeasure")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(17, 4)
                                .HasColumnType("decimal(17,4)");

                            b1.HasKey("InvoicePositionId");

                            b1.HasIndex("InvoiceId");

                            b1.ToTable("InvoicePosition");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");

                            b1.OwnsOne("vtb.InvoicesService.Domain.TaxInfo", "TaxInfo", b2 =>
                                {
                                    b2.Property<Guid>("InvoicePositionId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("TaxLabel")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("TaxLabel");

                                    b2.Property<decimal>("TaxMultiplier")
                                        .HasPrecision(4, 3)
                                        .HasColumnType("decimal(4,3)")
                                        .HasColumnName("TaxMultiplier");

                                    b2.HasKey("InvoicePositionId");

                                    b2.ToTable("InvoicePosition");

                                    b2.WithOwner()
                                        .HasForeignKey("InvoicePositionId");
                                });

                            b1.Navigation("TaxInfo");
                        });

                    b.Navigation("InvoiceNumber");

                    b.Navigation("InvoicePositions");
                });
#pragma warning restore 612, 618
        }
    }
}
